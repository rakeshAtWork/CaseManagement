# Generated by Django 5.0.6 on 2024-07-25 11:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("ticket_management", "0009_alter_sla_id"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ticket_no", models.CharField(max_length=10)),
                ("ticket_status", models.PositiveIntegerField()),
                ("ticket_header", models.CharField(max_length=200)),
                ("ticket_details", models.CharField(max_length=500)),
                ("on_behalf", models.PositiveIntegerField()),
                ("ticket_category", models.PositiveIntegerField()),
                ("project_id", models.PositiveIntegerField()),
                ("ticket_priority", models.PositiveIntegerField()),
                ("assigned_at", models.DateTimeField(blank=True, null=True)),
                (
                    "reassigned_reason",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("reassigned_at", models.DateTimeField(blank=True, null=True)),
                ("reassigned_status", models.PositiveIntegerField(null=True)),
                ("hold_from", models.DateTimeField(blank=True, null=True)),
                ("hold_to", models.DateTimeField(blank=True, null=True)),
                ("cancellation_at", models.DateTimeField(blank=True, null=True)),
                ("response_within", models.DateTimeField(blank=True, null=True)),
                ("response_at", models.DateTimeField(blank=True, null=True)),
                ("response_status", models.PositiveIntegerField(null=True)),
                (
                    "response_breach",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("response_breach_time", models.DateTimeField(blank=True, null=True)),
                ("resolution_within", models.DateTimeField(blank=True, null=True)),
                (
                    "resolution_postponed_time",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("resolution_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_status", models.PositiveIntegerField(null=True)),
                (
                    "resolution_breach",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("resolution_breach_time", models.DateTimeField(blank=True, null=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                ("comments", models.CharField(blank=True, max_length=500, null=True)),
                ("tags", models.CharField(blank=True, max_length=200, null=True)),
                ("is_delete", models.BooleanField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_assigned_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_assigned_to",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_department",
                        to="ticket_management.department",
                    ),
                ),
                (
                    "reassigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_reassigned_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resolution_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_resolution_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "response_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_response_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ticket_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_ticket_type",
                        to="ticket_management.tickettype",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "ticket",
            },
        ),
        migrations.CreateModel(
            name="TicketFollower",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_follower_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "follower_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_follower_follower_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ticket_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_follower_ticket",
                        to="ticket_management.ticket",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_follower_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "ticket_follower",
            },
        ),
        migrations.CreateModel(
            name="TicketRevision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("revision_status", models.PositiveIntegerField()),
                ("pti", models.PositiveIntegerField()),
                ("action_taken", models.DateTimeField()),
                ("before_revision", models.CharField(max_length=500)),
                ("after_revision", models.CharField(max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_revision_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ticket_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_revision_ticket",
                        to="ticket_management.ticket",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_revision_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "ticket_revision",
            },
        ),
    ]
